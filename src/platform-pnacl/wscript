#!/bin/env python
# -*- coding: utf-8 -*-

def build(bld):
	sources = [
		'buffering_skin.cpp',
		'geometry_builder.cpp',
		'geometry_spec.cpp',
		'iurlstream.cpp',
		'logbuf.cpp',
		'main.cpp',
		'ologstream.cpp',
		'recording_skin.cpp',
		'renderable_complex_polygon.cpp',
		'renderable_recording.cpp',
		'snygg_instance.cpp',
		'snygg_module.cpp',
		'urlbuf.cpp',
		'urlloader_file_loader.cpp',
		'vertex_spec.cpp',
	]

	obj = bld.program(
		source=sources,
		target='platform-pnacl_unstripped.bc',
		use=[
			'board',
			'core',
			'fileutil',
			'game',
			'game-loop',
			'geometry',
			#'gl-raii',
			'image',
			#'image-gl',
			'linear-algebra',
			'lua-board-provider',
			#'opengl2-skins',
			#'platform-desktop-sdl',
			#'sdl-game-core',
			'segment',
			'skin',
			'svg-skin',
			'win32-util',

			'ppapi_cpp',
			'ppapi',
			'ppapi_gles2',

			'pthread',
		],
		lib=[],
		includes=[]
	)
